script.
  function setStoredLineHeightAndFontSizeIfExists() {
    const storedLineHeight = localStorage.getItem('storedLineHeight');
    if (storedLineHeight) {
      subtitlesLineHeight = storedLineHeight;
      $('.plyr__caption').css('line-height', storedLineHeight);
    } else {
      const currentLineHeight = $('.plyr__caption').css('line-height');
      localStorage.setItem('storedLineHeight', currentLineHeight);
    }

    const storedFontSize = localStorage.getItem('storedFontSize');
    if (storedFontSize) {
      // l('found font size');
      // l(storedFontSize)
      subtitlesFontSize = storedFontSize;

      $('.plyr__caption').css('font-size', storedFontSize);
    } else {
      const currentFontSize = $('.plyr__caption').css('font-size');
      localStorage.setItem('storedFontSize', currentFontSize);
    }
  }

  function setCaptionBgOpacityIfExists() {
    const storedBgOpacity = localStorage.getItem("storedBgOpacity");

    if(storedBgOpacity) {
      subtitlesBgOpacity = storedBgOpacity;
      $('.plyr__caption').css("background", `rgba(0, 0, 0, ${storedBgOpacity}`);
    }
  }

  function adjustFontSize(direction) {

    const currentLineHeight = $('.plyr__caption').css('line-height');
    const currentLineHeight1 = currentLineHeight.replace('px', '');
    const newLineHeight = parseInt(currentLineHeight1) + (direction === 'increase' ? 1 : -1);

    const currentFontSize = $('.plyr__caption').css('font-size');
    const currentFontSize1 = currentFontSize.replace('px', '');
    const newFontSize = parseInt(currentFontSize1) + (direction === 'increase' ? 1 : -1);

    l('subtitlesFontSize', subtitlesFontSize)
    l('subtitlesLineHeight', subtitlesLineHeight)

    const newLineHeightWithPx = `${newLineHeight}px`;
    const newFontSizeWithPx = `${newFontSize}px`;

    $('.plyr__caption').css('line-height', newLineHeightWithPx);
    $('.plyr__caption').css('font-size', newFontSizeWithPx);

    localStorage.setItem('storedLineHeight', newLineHeightWithPx);
    localStorage.setItem('storedFontSize', newFontSizeWithPx);

    subtitlesFontSize = newFontSizeWithPx;
    subtitlesLineHeight = newLineHeightWithPx;

  }

  function adjustLineHeight(direction) {
    const currentLineHeight = $('.plyr__caption').css('line-height');
    const currentLineHeight1 = currentLineHeight.replace('px', '');
    const newLineHeight = parseInt(currentLineHeight1) + (direction === 'increase' ? 1 : -1);


    const newLineHeightWithPx = `${newLineHeight}px`;

    // l('subtitlesLineHeight', subtitlesLineHeight)

    $('.plyr__caption').css('line-height', newLineHeightWithPx);

    localStorage.setItem('storedLineHeight', newLineHeightWithPx);

    subtitlesLineHeight = newLineHeightWithPx;
  }

  function adjustCaptionsBackground (direction) {
    let bgColors, bgAlpha;
    const currentBgOpacity = $('.plyr__caption').css('background');
    bgColors = currentBgOpacity.split(',');
    bgAlpha = bgColors[3] ? bgColors[3].split(')')[0] : bgColors[3] = 1;

    const newBgOpacity = parseFloat(bgAlpha) + (direction === 'increase' ? 0.15 : -0.15);

    // Saving the new background opacity into localStorage.
    localStorage.setItem("storedBgOpacity", newBgOpacity);
    subtitlesBgOpacity = newBgOpacity;

    $('.plyr__caption').css("background", `rgba(0, 0, 0, ${newBgOpacity}`);
  }